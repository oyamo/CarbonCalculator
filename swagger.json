{
  "openapi":"3.0.0",
  "info":{
    "version":"1.0.0",
    "title":"InstantPickup API",
    "description":"",
    "license":{
      "name":"MIT",
      "url":"https://opensource.org/licenses/MIT"
    },
    "contact":{
      "name":"Oyamo Brian",
      "email":"oyamo.xyz@gmail.com",
      "url":"https://twitter.com/_oyamobrian"
    }
  },
  "servers":[
    {
      "url":"http://localhost:3000/api/v1",
      "description":"Development server"
    }
  ],
  "components":{
    "schemas":{
      "ShippingDetails": {
        "properties" : {
            "start_zip_code" : {
              "type" : "integer"
            },
          "stop_zip_code" : {
            "type" : "integer"
          },
          "weight" : {
            "type" : "number"
          }
        }
      },
      "AuthHeader" : {
        "properties" : {
          "Authorization": {
            "type" : "string"
          }
        }
      },
      "User":{
        "properties":{
          "fname":{
            "type":"string"
          },
          "lname":{
            "type":"string"
          },
          "email":{
            "type":"string"
          },
          "telephone":{
            "type":"string"
          },
          "country":{
            "type":"string"
          },
          "state":{
            "type":"string"
          },
          "address":{
            "type":"string"
          },
          "age":{
            "type":"integer"
          },
          "password":{
            "type":"string"
          }
        },
        "required":[
          "fname",
          "lname",
          "email",
          "telephone",
          "country",
          "state",
          "address",
          "age",
          "password"
        ]
      },
      "LoginCredentials":{
        "properties":{
          "email":{
            "type":"string"
          },
          "password":{
            "type":"string"
          }
        },
        "required":[
          "email",
          "password"
        ]
      },
      "Response":{
        "properties":{
          "status":{
            "type":"object"
          },
          "data":{
            "type":"object"
          }
        }
      }
    },
    "parameters":{
      "skipParam":{
        "name":"skip",
        "in":"query",
        "description":"number of items to skip",
        "required":true,
        "schema":{
          "type":"integer",
          "format":"int32"
        }
      },
      "limitParam":{
        "name":"limit",
        "in":"query",
        "description":"max records to return",
        "required":true,
        "schema":{
          "type":"integer",
          "format":"int32"
        }
      }
    },
    "responses":{
      "NotFound":{
        "description":"Entity not found."
      },
      "IllegalInput":{
        "description":"Illegal input for operation."
      },
      "GeneralError":{
        "description":"General Error",
        "content":{
          "application/json":{
            "schema":{
              "$ref":"#/components/schemas/GeneralError"
            }
          }
        }
      }
    },
    "securitySchemes":{
      "api_key":{
        "type":"apiKey",
        "name":"Authorization",
        "in":"header"
      }
    }
  },
  "host":"localhost:3000",
  "basePath":"/api/v1",
  "tags":[
    {
      "name":"Users",
      "description":"API for users in the system"
    },
    {
      "name":"Authentication",
      "description":"API for Authenticating users"
    }
  ],
  "schemes":[
    "http"
  ],
  "consumes":[
    "application/json"
  ],
  "produces":[
    "application/json"
  ],
  "paths":{
    "/users/new":{
      "post":{
        "tags":[
          "Users"
        ],
        "description":"Create new user in system",
        "parameters":[
          {
            "name":"user",
            "in":"body",
            "description":"User that we want to create",
            "schema":{
              "$ref":"#/components/schemas/User"
            }
          }
        ],
        "produces":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"New user is created",
            "schema":{
              "$ref":"#/components/schemas/User"
            }
          }
        }
      }
    },
    "/auth/login":{
      "post":{
        "tags":[
          "Authentication"
        ],
        "description":"Authenticate with the application",
        "parameters":[
          {
            "name":"credentials",
            "in":"body",
            "description":"Username and password",
            "schema":{
              "$ref":"#/components/schemas/LoginCredentials"
            }
          }
        ],
        "produces":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"User is authorised and given an Authorization token",
            "schema":{
              "$ref":"#/components/schemas/Response"
            }
          }
        }
      }
    },
    "/auth/logout":{
      "get":{
        "tags":[
          "Authentication"
        ],
        "description":"Logs out a logged in user",
        "security":{
          "bearerAuth":[

          ]
        },
        "produces":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Successfully logged out",
            "schema":{
              "$ref":"#/components/schemas/Response"
            }
          }
        }
      }
    },
    "/calculator/calculate":{
      "post":{
        "tags":[
          "Carbon Calculator"
        ],
        "description":"Calculates carbon emmision during shipping",
        "parameters":[
          {
            "name":"Shipping Details",
            "in":"body",
            "description":"Username and password",
            "schema":{
              "$ref":"#/components/schemas/ShippingDetails"
            }
          },
          {
            "name":"Authorization",
            "in":"header",
            "required": true,
            "description":"Bearer token",
            "schema":{
              "$ref":"#/components/schemas/AuthHeader"
            }
          }
        ],
        "security":{
          "bearerAuth":[

          ]
        },
        "produces":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Carbon emmission details",
            "schema":{
              "$ref":"#/components/schemas/Response"
            }
          }
        }
      }
    },
    "/calculator/report":{
      "get":{
        "tags":[
          "Carbon Calculator"
        ],
        "description":"Get a report of total transactions",
        "parameters":[{
            "name":"Authorization",
            "in":"header",
            "required": true,
            "description":"Bearer token"
          }
        ],
        "security":{
          "bearerAuth":[

          ]
        },
        "produces":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Carbon emmission details",
            "schema":{
              "$ref":"#/components/schemas/Response"
            }
          }
        }
      }
    },
    "/calculator/history":{
      "get":{
        "tags":[
          "Carbon Calculator"
        ],
        "description":"Get carbon calculation history",
        "parameters":[
          {
            "name":"Authorization",
            "in":"header",
            "required": true,
            "description":"Bearer token"
          }
        ],
        "security":{
          "apiKey":[

          ]
        },
        "produces":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"History in an array",
            "schema":{
              "$ref":"#/components/schemas/Response"
            }
          }
        }
      }
    }
  }
}